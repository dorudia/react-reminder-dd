{"version":3,"sources":["List.js","Alert.js","reducer.js","App.js","index.js"],"names":["List","items","removeItem","editItem","className","map","item","id","title","key","type","onClick","Alert","msg","removeAlert","list","useEffect","timeout","setTimeout","clearTimeout","reducer","state","action","alert","show","newList","payload","console","log","isEditing","editId","Error","defaultState","localStorage","getItem","JSON","parse","getLocalStorage","areYouSure","background","App","useState","name","setName","useReducer","dispatch","setItem","stringify","onSubmit","e","preventDefault","newItem","Date","getTime","toString","rows","value","onChange","target","filterList","filter","editedItem","find","editingId","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kMAmBeA,EAjBF,SAAC,GAAmC,IAAlCC,EAAiC,EAAjCA,MAAOC,EAA0B,EAA1BA,WAAYC,EAAc,EAAdA,SAChC,OAAO,yBAAKC,UAAW,gBAEnBH,EAAMI,KAAK,SAAAC,GAAS,IACZC,EAAaD,EAAbC,GAAIC,EAASF,EAATE,MACV,OAAO,6BAASC,IAAKF,EAAIH,UAAW,gBAClC,uBAAGA,UAAW,SAAUI,GACxB,yBAAKJ,UAAU,iBACb,4BAAQM,KAAM,SAAUN,UAAW,WAAYO,QAAS,kBAAMR,EAASI,KAAK,kBAAC,IAAD,OAC5E,4BAAQG,KAAM,SAAUN,UAAW,aAAcO,QAAS,kBAAMT,EAAWK,KAAK,kBAAC,IAAD,cCC7EK,EAVD,SAAC,GAAoC,IAAnCF,EAAkC,EAAlCA,KAAMG,EAA4B,EAA5BA,IAAKC,EAAuB,EAAvBA,YAAaC,EAAU,EAAVA,KAOtC,OANAC,qBAAU,WACP,IAAMC,EAAUC,YAAW,WACtBJ,MACH,KACD,OAAO,kBAAMK,aAAaF,MAC3B,CAACF,IACG,uBAAGX,UAAS,uBAAkBM,IAASG,I,OCTlCO,EAAU,SAACC,EAAOC,GAC5B,GAAmB,kBAAhBA,EAAOZ,KACN,OAAO,2BAAKW,GAAZ,IAAoBE,MAAO,CAACC,MAAM,EAAMX,IAAK,qBAAsBH,KAAM,YAE7E,GAAmB,aAAhBY,EAAOZ,KAAqB,CAC3B,IAAMe,EAAO,sBAAOJ,EAAMN,MAAb,CAAmBO,EAAOI,UAEvC,OADAC,QAAQC,IAAIH,GACL,2BAAKJ,GAAZ,IACIQ,WAAW,EACXN,MAAO,CAACC,MAAM,EAAMX,IAAK,yBAA0BH,KAAM,WACzDK,KAAMU,IAGd,GAAmB,eAAhBH,EAAOZ,KACN,OAAO,2BAAIW,GAAX,IAAkBE,MAAO,CAACC,MAAM,EAAOX,IAAK,GAAIH,KAAM,MAE1D,GAAmB,gBAAhBY,EAAOZ,KACN,OAAO,2BAAIW,GAAX,IAAkBN,KAAMO,EAAOI,UAEnC,GAAmB,cAAhBJ,EAAOZ,KACN,OAAO,2BAAIW,GAAX,IAAkBE,MAAO,CAACC,MAAM,EAAMX,IAAK,UAAWH,KAAM,WAAYmB,WAAW,EAAMC,OAAQR,EAAOI,UAC3G,GAAmB,gBAAhBJ,EAAOZ,KACP,OAAO,2BAAIW,GAAX,IAAkBE,MAAO,CAACC,MAAM,EAAMX,IAAK,gBAAiBH,KAAM,WAAYmB,WAAW,IAE7F,MAAM,IAAIE,MAAM,4BCVdC,EAAe,CACnBjB,KAVsB,WACtB,IAAIA,EAAOkB,aAAaC,QAAQ,QAChC,OAAGnB,EACMoB,KAAKC,MAAMrB,GAEX,GAKHsB,GACNR,WAAW,EACXC,OAAQ,KACRP,MAAO,CAACC,MAAM,EAAOX,IAAK,GAAIH,KAAM,IACpC4B,YAAY,EACZC,YAAY,GAiFCC,MA7Ef,WAAgB,IAAD,EACWC,mBAAS,IADpB,mBACNC,EADM,KACAC,EADA,OAEYC,qBAAWxB,EAASY,GAFhC,mBAEPX,EAFO,KAEAwB,EAFA,KAsDb,OAJA7B,qBAAU,WACRiB,aAAaa,QAAQ,OAAOX,KAAKY,UAAU1B,EAAMN,SACjD,CAACM,EAAMN,OAEF,oCACJM,EAAME,MAAMC,MAAQ,kBAAC,EAAD,iBAAWH,EAAME,MAAjB,CAAwBT,YArB3B,WAClB+B,EAAS,CAACnC,KAAM,gBAoBuDK,KAAMM,EAAMN,QACnF,6BAASX,UAAS,UAAMiB,EAAMkB,WAAa,4BAA6B,mBACtE,0BAAMS,SArDW,SAACC,GAmBpB,GAlBAA,EAAEC,iBACER,GAEFG,EAAS,CAACnC,KAAM,kBAEdgC,GAAQrB,EAAMQ,YAEdR,EAAMN,KAAQM,EAAMN,KAAKV,KAAI,SAACC,GAC5B,OAAGA,EAAKC,KAAOc,EAAMS,OACZ,2BAAIxB,GAAX,IAAiBE,MAAOkC,IAEnBpC,KAGXuC,EAAS,CAACnC,KAAM,gBAChBiC,EAAQ,KAGND,IAASrB,EAAMQ,UAAU,CAE3B,IAAKsB,EAAU,CAAC5C,IAAI,IAAI6C,MAAOC,UAAUC,WAAY9C,MAAOkC,GAC5DG,EAAS,CAACnC,KAAM,WAAYgB,QAASyB,IACtCR,GAAQ,WACN,MAAO,QA6BsBvC,UAAU,gBACtC,8CACA,yBAAKA,UAAU,gBAIb,8BAAWA,UAAW,UAAWmD,KAAK,IAAKC,MAAOd,EAAMe,SAAU,SAACR,GAAD,OAAON,EAAQM,EAAES,OAAOF,UAC1F,4BAAQ9C,KAAM,SAAUN,UAAW,cAAeiB,EAAMQ,UAAW,OAAQ,YAG/E,yBAAKzB,UAAU,sBACb,kBAAC,EAAD,CAAMH,MAAOoB,EAAMN,KAAMb,WA/BZ,SAACK,GAClB,IAAMoD,EAAatC,EAAMN,KAAK6C,QAAO,SAACtD,GAAD,OAAUA,EAAKC,KAAOA,KAC3DsC,EAAS,CAACnC,KAAM,cAAegB,QAASiC,KA6BaxD,SA3BvC,SAACI,GACf,IAAMsD,EAAaxC,EAAMN,KAAK+C,MAAK,SAACxD,GAAD,OAAUA,EAAKC,KAAOA,KACzDoC,EAAQkB,EAAWrD,OACnB,IAAMuD,EAAYF,EAAWtD,GAC7BoB,QAAQC,IAAIiC,EAAWrD,OACvBqC,EAAS,CAACnC,KAAM,YAAagB,QAASqC,WCjE1CC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,U","file":"static/js/main.9e882ee2.chunk.js","sourcesContent":["import React from 'react'\nimport { FaEdit, FaTrash } from 'react-icons/fa'\nconst List = ({items, removeItem, editItem}) => {\n  return <div className={'grocery-list'}>\n    {\n      items.map((item => {\n        const{id, title} = item\n        return <article key={id} className={'grocery-item'}>\n          <p className={'title'}>{title}</p>\n          <div className=\"btn-container\">\n            <button type={'button'} className={'edit-btn'} onClick={() => editItem(id)}><FaEdit/></button>\n            <button type={'button'} className={'delete-btn'} onClick={() => removeItem(id)}><FaTrash/></button>\n          </div>\n        </article>\n      }))\n    }\n  </div>\n}\n\nexport default List\n","import React, { useEffect } from 'react'\n\nconst Alert = ({type, msg, removeAlert, list}) => {\n  useEffect(() => {\n     const timeout = setTimeout(() => {\n          removeAlert()\n     },2000)\n      return () => clearTimeout(timeout)\n  }, [list])\n  return <p className={`'alert alert-${type}`}>{msg}</p>\n}\n\nexport default Alert\n"," export const reducer = (state, action) => {\n    if(action.type === 'DISPLAY_ALERT') {\n        return  {...state,  alert: {show: true, msg: 'please enter value', type: 'danger'}}\n    }\n    if(action.type === 'ADD_ITEM') {\n        const newList = [...state.list, action.payload]\n        console.log(newList)\n        return  {...state,\n            isEditing: false,\n            alert: {show: true, msg: 'item added to the list', type: 'success'},\n            list: newList\n        }\n    }\n    if(action.type === 'HIDE_ALERT') {\n        return {...state, alert: {show: false, msg: '', type: ''}}\n    }\n    if(action.type === 'REMOVE_ITEM') {\n        return {...state, list: action.payload}\n    }\n    if(action.type === 'EDIT_ITEM') {\n        return {...state, alert: {show: true, msg: 'editing', type: 'success'}, isEditing: true, editId: action.payload}\n    }if(action.type === 'SUBMIT_EDIT') {\n        return {...state, alert: {show: true, msg: 'value changed', type: 'success'}, isEditing: false }\n    }\n    throw new Error('no matching action type')\n}","import React, { useState, useEffect,useReducer } from 'react'\nimport List from './List'\nimport Alert from './Alert'\nimport {reducer} from \"./reducer\";\n\nconst getLocalStorage = () => {\n  let list = localStorage.getItem('list')\n  if(list) {\n    return JSON.parse(list)\n  }else {\n    return []\n  }\n}\n\nconst defaultState = {\n  list: getLocalStorage(),\n  isEditing: false,\n  editId: null,\n  alert: {show: false, msg: '', type: ''},\n  areYouSure: false,\n  background: false,\n\n}\n\nfunction App() {\n  const [name, setName] = useState('');\n  const[state, dispatch] = useReducer(reducer, defaultState)\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    if(!name) {\n    //  display alert\n      dispatch({type: 'DISPLAY_ALERT'})\n    }\n    if (name && state.isEditing) {\n       // deal with edit\n        state.list = (state.list.map((item) => {\n          if(item.id === state.editId) {\n            return {...item, title: name}\n          }\n          return item\n        }))\n\n      dispatch({type: 'SUBMIT_EDIT'})\n      setName('')\n    }\n\n    if (name && !state.isEditing){\n\n      let  newItem = {id: new Date().getTime().toString(), title: name}\n      dispatch({type: 'ADD_ITEM', payload: newItem})\n     setName(() => {\n       return ''\n     })\n    }\n\n  }\n\n  const removeAlert = () => {\n    dispatch({type: 'HIDE_ALERT'})\n  }\n  const removeItem = (id) => {\n    const filterList = state.list.filter((item) => item.id !== id)\n    dispatch({type: 'REMOVE_ITEM', payload: filterList})\n  }\n  const editItem= (id) => {\n    const editedItem = state.list.find((item) => item.id === id)\n    setName(editedItem.title)\n    const editingId = editedItem.id;\n    console.log(editedItem.title)\n    dispatch({type: 'EDIT_ITEM', payload: editingId})\n  }\n\n\n  useEffect(() => {\n    localStorage.setItem('list',JSON.stringify(state.list))\n  },[state.list])\n\n  return <>\n    {state.alert.show && <Alert {...state.alert} removeAlert={removeAlert} list={state.list}/>}\n    <section className={`${ state.background ? 'section-center backdround': 'section-center'}`}>\n      <form onSubmit={handleSubmit} className=\"grocery-form\">\n        <h3>React Reminder</h3>\n        <div className=\"form-control\">\n          {/*<input type={'text'} className={'grocery'} placeholder={'enter your reminder'}*/}\n          {/*       value={name}*/}\n          {/*       onChange={(e) => setName(e.target.value)}/>*/}\n          <textarea  className={'grocery'} rows=\"6\"  value={name} onChange={(e) => setName(e.target.value)}/>\n          <button type={'submit'} className={'submit-btn'}>{state.isEditing? 'edit': 'submit'}</button>\n        </div>\n      </form>\n      <div className=\"reminder-container\">\n        <List items={state.list} removeItem={removeItem} editItem={editItem} />\n        {/*<button className={'clear-btn'} onClick={clearlist}>clear items</button>*/}\n      </div>\n    </section>\n  </>\n\n}\n\n\nexport default App\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}