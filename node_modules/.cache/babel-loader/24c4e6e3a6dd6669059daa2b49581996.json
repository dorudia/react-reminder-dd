{"ast":null,"code":"var _jsxFileName = \"/Users/dorudiaconu/Desktop/react-reminder/src/App.js\";\nimport React, { useState, useEffect, useReducer } from 'react';\nimport List from './List';\nimport Alert from './Alert';\nimport { reducer } from \"./reducer\";\n\nconst getLocalStorage = () => {\n  let list = localStorage.getItem('list');\n\n  if (list) {\n    return JSON.parse(list);\n  } else {\n    return [];\n  }\n};\n\nconst defaultState = {\n  list: getLocalStorage(),\n  isEditing: false,\n  editId: null,\n  alert: {\n    show: false,\n    msg: '',\n    type: ''\n  },\n  areYouSure: false,\n  background: false\n};\n\nfunction App() {\n  const [name, setName] = useState('');\n  const [state, dispatch] = useReducer(reducer, defaultState);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    if (!name) {\n      //  display alert\n      dispatch({\n        type: 'DISPLAY_ALERT'\n      });\n    }\n\n    if (name && state.isEditing) {\n      // deal with edit\n      state.list = state.list.map(item => {\n        if (item.id === state.editId) {\n          return { ...item,\n            title: name\n          };\n        }\n\n        return item;\n      });\n      dispatch({\n        type: 'SUBMIT_EDIT'\n      });\n      setName('');\n    }\n\n    if (name && !state.isEditing) {\n      let newItem = {\n        id: new Date().getTime().toString(),\n        title: name\n      };\n      dispatch({\n        type: 'ADD_ITEM',\n        payload: newItem\n      });\n      setName(() => {\n        return '';\n      });\n    }\n  };\n\n  const removeAlert = () => {\n    dispatch({\n      type: 'HIDE_ALERT'\n    });\n  };\n\n  const removeItem = id => {\n    const filterList = state.list.filter(item => item.id !== id);\n    dispatch({\n      type: 'REMOVE_ITEM',\n      payload: filterList\n    });\n  };\n\n  const editItem = id => {\n    const editedItem = state.list.find(item => item.id === id);\n    setName(editedItem.title);\n    const editingId = editedItem.id;\n    console.log(editedItem.title);\n    dispatch({\n      type: 'EDIT_ITEM',\n      payload: editingId\n    });\n  };\n\n  useEffect(() => {\n    localStorage.setItem('list', JSON.stringify(state.list));\n  }, [state.list]);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, state.alert.show && /*#__PURE__*/React.createElement(Alert, Object.assign({}, state.alert, {\n    removeAlert: removeAlert,\n    list: state.list,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 26\n    }\n  })), /*#__PURE__*/React.createElement(\"section\", {\n    className: `${state.background ? 'section-center backdround' : 'section-center'}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    className: \"grocery-form\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 9\n    }\n  }, \"React Reminder\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-control\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"textarea\", {\n    className: 'grocery',\n    rows: \"6\",\n    value: name,\n    onChange: e => setName(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    type: 'submit',\n    className: 'submit-btn',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 11\n    }\n  }, state.isEditing ? 'edit' : 'submit'))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"reminder-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(List, {\n    items: state.list,\n    removeItem: removeItem,\n    editItem: editItem,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 9\n    }\n  }))));\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/dorudiaconu/Desktop/react-reminder/src/App.js"],"names":["React","useState","useEffect","useReducer","List","Alert","reducer","getLocalStorage","list","localStorage","getItem","JSON","parse","defaultState","isEditing","editId","alert","show","msg","type","areYouSure","background","App","name","setName","state","dispatch","handleSubmit","e","preventDefault","map","item","id","title","newItem","Date","getTime","toString","payload","removeAlert","removeItem","filterList","filter","editItem","editedItem","find","editingId","console","log","setItem","stringify","target","value"],"mappings":"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","sourcesContent":["import React, { useState, useEffect,useReducer } from 'react'\nimport List from './List'\nimport Alert from './Alert'\nimport {reducer} from \"./reducer\";\n\nconst getLocalStorage = () => {\n  let list = localStorage.getItem('list')\n  if(list) {\n    return JSON.parse(list)\n  }else {\n    return []\n  }\n}\n\nconst defaultState = {\n  list: getLocalStorage(),\n  isEditing: false,\n  editId: null,\n  alert: {show: false, msg: '', type: ''},\n  areYouSure: false,\n  background: false,\n\n}\n\nfunction App() {\n  const [name, setName] = useState('');\n  const[state, dispatch] = useReducer(reducer, defaultState)\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    if(!name) {\n    //  display alert\n      dispatch({type: 'DISPLAY_ALERT'})\n    }\n    if (name && state.isEditing) {\n       // deal with edit\n        state.list = (state.list.map((item) => {\n          if(item.id === state.editId) {\n            return {...item, title: name}\n          }\n          return item\n        }))\n\n      dispatch({type: 'SUBMIT_EDIT'})\n      setName('')\n    }\n\n    if (name && !state.isEditing){\n\n      let  newItem = {id: new Date().getTime().toString(), title: name}\n      dispatch({type: 'ADD_ITEM', payload: newItem})\n     setName(() => {\n       return ''\n     })\n    }\n\n  }\n\n  const removeAlert = () => {\n    dispatch({type: 'HIDE_ALERT'})\n  }\n  const removeItem = (id) => {\n    const filterList = state.list.filter((item) => item.id !== id)\n    dispatch({type: 'REMOVE_ITEM', payload: filterList})\n  }\n  const editItem= (id) => {\n    const editedItem = state.list.find((item) => item.id === id)\n    setName(editedItem.title)\n    const editingId = editedItem.id;\n    console.log(editedItem.title)\n    dispatch({type: 'EDIT_ITEM', payload: editingId})\n  }\n\n\n  useEffect(() => {\n    localStorage.setItem('list',JSON.stringify(state.list))\n  },[state.list])\n\n  return <>\n    {state.alert.show && <Alert {...state.alert} removeAlert={removeAlert} list={state.list}/>}\n    <section className={`${ state.background ? 'section-center backdround': 'section-center'}`}>\n      <form onSubmit={handleSubmit} className=\"grocery-form\">\n        <h3>React Reminder</h3>\n        <div className=\"form-control\">\n          {/*<input type={'text'} className={'grocery'} placeholder={'enter your reminder'}*/}\n          {/*       value={name}*/}\n          {/*       onChange={(e) => setName(e.target.value)}/>*/}\n          <textarea  className={'grocery'} rows=\"6\"  value={name} onChange={(e) => setName(e.target.value)}/>\n          <button type={'submit'} className={'submit-btn'}>{state.isEditing? 'edit': 'submit'}</button>\n        </div>\n      </form>\n      <div className=\"reminder-container\">\n        <List items={state.list} removeItem={removeItem} editItem={editItem} />\n        {/*<button className={'clear-btn'} onClick={clearlist}>clear items</button>*/}\n      </div>\n    </section>\n  </>\n\n}\n\n\nexport default App\n"]},"metadata":{},"sourceType":"module"}