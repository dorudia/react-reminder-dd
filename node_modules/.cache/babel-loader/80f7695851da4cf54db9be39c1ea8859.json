{"ast":null,"code":"var _jsxFileName = \"/Users/dorudiaconu/Desktop/react-utility/src/App.js\";\nimport React, { useState, useEffect, useReducer } from 'react';\nimport List from './List';\nimport Alert from './Alert';\n\nconst reducer = (state, action, name) => {\n  if (action.type === 'DISPLAY_ALERT') {\n    return { ...state,\n      alert: {\n        show: true,\n        msg: 'please enter value',\n        type: 'danger'\n      }\n    };\n  }\n\n  if (action.type === 'ADD_ITEM') {\n    const newItem = {\n      id: new Date().getTime().toString(),\n      title: name\n    }; //   state.list([...state.list, newItem])\n\n    return { ...state,\n      alert: {\n        show: true,\n        msg: 'item added to the list',\n        type: 'success',\n        list: [newItem]\n      }\n    };\n    console.log(state.list);\n  }\n\n  return state;\n};\n\nconst defaultState = {\n  list: [{\n    id: 1,\n    title: 1\n  }, {\n    id: 2,\n    title: 2\n  }],\n  isEditing: false,\n  editId: null,\n  alert: {\n    show: false,\n    msg: '',\n    type: ''\n  },\n  areYouSure: false\n};\n\nfunction App() {\n  const [name, setName] = useState('');\n  const [state, dispatch] = useReducer(reducer, defaultState); // const [list, setList] = useState(getLocalStorage());\n  // const [isEditing, setIsEditing] = useState(false);\n  // const [editId, setEditId] = useState(null);\n  // const [alert, setAlert] = useState({show: false, msg: '', type: ''});\n  // const [areYouSure, setAreyouSure] = useState(false)\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    if (!name) {\n      //  display alert\n      //   showAlert(true,'danger','please enter value')\n      dispatch({\n        type: 'DISPLAY_ALERT'\n      });\n    } else if (name && state.isEditing) {//  deal with edit\n      //   state.list = (state.list.map((item) => {\n      //     if(item.id === state.editId) {\n      //       return {...item, title: name}\n      //     }\n      //     return item\n      //   }))\n      //   state.name('')\n      //   state.editId(false)\n      //   state.editId(null)\n      //   showAlert(true,'success', 'value changed')\n    } else {\n      //  show alert\n      //   showAlert(true, 'success', 'item added to the list')\n      //   const newItem = {id: new Date().getTime().toString(), title: name}\n      //   state.list([...state.list, newItem])\n      //   setName('')\n      dispatch({\n        type: 'ADD_ITEM'\n      });\n    }\n\n    console.log(state.list);\n  }; // const editItem = (id) => {\n  //     const specificItem = state.list.find((item) => item.id === id)\n  //     state.isEditing(true);\n  //     state.editId(id)\n  //     setName(specificItem.title)\n  // }\n\n\n  useEffect(() => {\n    localStorage.setItem('list', JSON.stringify(state.list));\n  }, [state.list]);\n  return /*#__PURE__*/React.createElement(\"section\", {\n    className: 'section-center',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 10\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    className: \"grocery-form\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 5\n    }\n  }, state.alert.show && /*#__PURE__*/React.createElement(Alert, Object.assign({}, state.alert, {\n    removeAlert: state.alert.msg,\n    list: state.list,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 28\n    }\n  })), /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }\n  }, \"reminder\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-control\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    className: 'grocery',\n    placeholder: 'enter your reminder',\n    value: name,\n    onChange: e => setName(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    type: 'submit',\n    className: 'submit-btn',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 9\n    }\n  }, state.isEditing ? 'edit' : 'submit'))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"reminder-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(List, {\n    items: state.list,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }\n  })));\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/dorudiaconu/Desktop/react-utility/src/App.js"],"names":["React","useState","useEffect","useReducer","List","Alert","reducer","state","action","name","type","alert","show","msg","newItem","id","Date","getTime","toString","title","list","console","log","defaultState","isEditing","editId","areYouSure","App","setName","dispatch","handleSubmit","e","preventDefault","localStorage","setItem","JSON","stringify","target","value"],"mappings":"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","sourcesContent":["import React, { useState, useEffect,useReducer } from 'react'\nimport List from './List'\nimport Alert from './Alert'\n\n\n\nconst reducer = (state, action, name) => {\n\n   if(action.type === 'DISPLAY_ALERT') {\n     return  {...state,  alert: {show: true, msg: 'please enter value', type: 'danger'}}\n   }\n  if(action.type === 'ADD_ITEM') {\n    const newItem = {id: new Date().getTime().toString(), title: name}\n    //   state.list([...state.list, newItem])\n\n    return  {...state,\n        alert: {show: true, msg: 'item added to the list', type: 'success',\n          list: [newItem]\n\n    }}\n    console.log(state.list)\n  }\n  return state\n}\nconst defaultState = {\n  list: [{id:1, title: 1}, {id:2, title: 2}],\n  isEditing: false,\n  editId: null,\n  alert: {show: false, msg: '', type: ''},\n  areYouSure: false\n}\n\nfunction App() {\n  const [name, setName] = useState('');\n  const[state, dispatch] = useReducer(reducer, defaultState)\n  // const [list, setList] = useState(getLocalStorage());\n  // const [isEditing, setIsEditing] = useState(false);\n  // const [editId, setEditId] = useState(null);\n  // const [alert, setAlert] = useState({show: false, msg: '', type: ''});\n  // const [areYouSure, setAreyouSure] = useState(false)\n\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    if(!name) {\n    //  display alert\n    //   showAlert(true,'danger','please enter value')\n      dispatch({type: 'DISPLAY_ALERT'})\n    } else if (name && state.isEditing) {\n    //  deal with edit\n    //   state.list = (state.list.map((item) => {\n    //     if(item.id === state.editId) {\n    //       return {...item, title: name}\n    //     }\n    //     return item\n    //   }))\n    //   state.name('')\n    //   state.editId(false)\n    //   state.editId(null)\n    //   showAlert(true,'success', 'value changed')\n    } else {\n    //  show alert\n    //   showAlert(true, 'success', 'item added to the list')\n    //   const newItem = {id: new Date().getTime().toString(), title: name}\n    //   state.list([...state.list, newItem])\n    //   setName('')\n      dispatch({type: 'ADD_ITEM'})\n    }\n    console.log(state.list)\n  }\n\n\n\n  // const editItem = (id) => {\n  //     const specificItem = state.list.find((item) => item.id === id)\n  //     state.isEditing(true);\n  //     state.editId(id)\n  //     setName(specificItem.title)\n  // }\n\n  useEffect(() => {\n    localStorage.setItem('list',JSON.stringify(state.list))\n  },[state.list])\n\n  return <section className={'section-center'}>\n    <form onSubmit={handleSubmit} className=\"grocery-form\">\n      {state.alert.show && <Alert {...state.alert} removeAlert={state.alert.msg} list={state.list}/>}\n      <h3>reminder</h3>\n      <div className=\"form-control\">\n        <input type=\"text\" className={'grocery'} placeholder={'enter your reminder'}\n               value={name}\n               onChange={(e) => setName(e.target.value)}/>\n        <button type={'submit'} className={'submit-btn'}>{state.isEditing? 'edit': 'submit'}</button>\n      </div>\n    </form>\n    <div className=\"reminder-container\">\n      <List items={state.list} />\n      {/*<button className={'clear-btn'} onClick={clearlist}>clear items</button>*/}\n    </div>\n  </section>\n}\n\n\nexport default App\n"]},"metadata":{},"sourceType":"module"}